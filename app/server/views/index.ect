<!doctype html>
<html>
	<head>
		<style>
			.highlight {
				color: blue;
				font-weight: bold;
			}
		</style>
	</head>
	<body>
		<h1>Chat Application</h1>
		<form id="room">
			<input type="text" id="room-no">
			<button type="submit">Join</button>
		</form>
		<hr>
		<form id="chat">
			<input type="text" id="message">
			<button type="submit">Send</button>
		</form>
		<div id="messages">

		</div>
		<script src="/socket.io/socket.io.js"></script>
		<script>
			window.addEventListener('load', function() {
				var socket = io();
				var chatForm = document.getElementById('chat');
				var roomForm = document.getElementById('room');
				var chatMessageInput = document.getElementById('message');
				var roomNoInput = document.getElementById('room-no');
				var container = document.getElementById('messages');

				chatForm.addEventListener('submit', function(event) {
					event.preventDefault();

					var message = chatMessageInput.value;

					if (message) {
						socket.emit('message', {
							code: 'CHAT',
							data: {
								room: roomNoInput.value,
								chat: message
							}
						});

						log(container, message, true);
						// reset input
						chatMessageInput.value = '';
					}
				});

				roomForm.addEventListener('submit', function(event) {
					event.preventDefault();

					var roomNo = roomNoInput.value;

					if (roomNo) {
						socket.emit('message', {
							code: 'JOIN',
							data: roomNo
						});
					}
				});

				socket.on('message', function(message) {
					console.log(message);
					if (message.code === 'CHAT') {
						if (message.from !== socket.id) {
							log(container, message.data);
						}
					} else if (message.code === 'JOIN') {
						var highlight = false;
						var actor = socket.id === message.from ?
								(highlight = true, 'You') :
								'[' + message.from + ']';

						log(container, actor + ' has joined room [' + message.data + ']', highlight);
					} else if (message.code === 'LEAVE') {
						var highlight = false;
						var actor = socket.id === message.from ?
								(highlight = true, 'You') :
								'[' + message.from + ']';

						log(container, actor + ' has left room [' + message.data + ']', highlight);
					}
				});


			});

			function log(container, message, highlight) {
				var line = document.createElement('div');
				var text = document.createTextNode(message);

				if (highlight) {
					line.className = 'highlight';
				}

				line.appendChild(text);

				container.appendChild(line);
			}
		</script>
	</body>
</html>
